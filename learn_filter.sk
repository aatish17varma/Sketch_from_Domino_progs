/* 
// Original program: 
//#include "hashes.h"

struct Packet {
  int sport;
  int dport;
  int member;
  int filter1_idx;
  int filter2_idx;
  int filter3_idx;
};

#define NUM_ENTRIES 256

int filter1[NUM_ENTRIES] = {0};
int filter2[NUM_ENTRIES] = {0};
int filter3[NUM_ENTRIES] = {0};

void func(struct Packet pkt) {
//  pkt.filter1_idx = hash2a(pkt.sport, pkt.dport) % NUM_ENTRIES;
//  pkt.filter2_idx = hash2b(pkt.sport, pkt.dport) % NUM_ENTRIES;
//  pkt.filter3_idx = hash2c(pkt.sport, pkt.dport) % NUM_ENTRIES;
  pkt.filter1_idx = pkt.filter1_idx;  
  pkt.filter2_idx = pkt.filter2_idx; 
  pkt.filter3_idx = pkt.filter3_idx; 
  pkt.member = (filter1[pkt.filter1_idx] &&
                filter2[pkt.filter2_idx] &&
                filter3[pkt.filter3_idx]);

  filter1[pkt.filter1_idx] = 1;
  filter2[pkt.filter2_idx] = 1;
  filter3[pkt.filter3_idx] = 1;
}
 */

// Output the rename map:
// stateless variable rename list: 

// state_and_packet.pkt_0 = pkt.filter1_idx
// state_and_packet.pkt_1 = pkt.filter2_idx
// state_and_packet.pkt_2 = pkt.filter3_idx
// state_and_packet.pkt_3 = pkt.member

// stateful variable rename list: 

// state_and_packet.state_0 = filter1[pkt.filter1_idx]
// state_and_packet.state_1 = filter2[pkt.filter2_idx]
// state_and_packet.state_2 = filter3[pkt.filter3_idx]

|StateAndPacket| program (|StateAndPacket| state_and_packet) {state_and_packet.pkt_0=state_and_packet.pkt_0;state_and_packet.pkt_1=state_and_packet.pkt_1;state_and_packet.pkt_2=state_and_packet.pkt_2;state_and_packet.pkt_3=(state_and_packet.state_0&&state_and_packet.state_1&&state_and_packet.state_2);state_and_packet.state_0=1;state_and_packet.state_1=1;state_and_packet.state_2=1; return state_and_packet;
}
