/* 
// Original program: 
//#include "hashes.h"

#define NUM_FLOWS 8000
#define TIME_MIN 1

struct Packet {
  int sport;
  int dport;
  int id;
  int start;
  int length;
  int virtual_time;
};

int last_finish [NUM_FLOWS] = {TIME_MIN};

void stfq(struct Packet pkt) {
//  pkt.id  = hash2(pkt.sport,
//                  pkt.dport)
//            % NUM_FLOWS;

  pkt.id = pkt.id; 
  if ((last_finish[pkt.id] > TIME_MIN) && (pkt.virtual_time < last_finish[pkt.id])) {
    pkt.start = last_finish[pkt.id];
    last_finish[pkt.id] += pkt.length;
  } else {
    pkt.start = pkt.virtual_time;
    last_finish[pkt.id] = pkt.virtual_time + pkt.length;
  }
}
 */

// Output the rename map:
// stateless variable rename list: 

// state_and_packet.pkt_0 = pkt.id
// state_and_packet.pkt_1 = pkt.virtual_time
// state_and_packet.pkt_2 = pkt.start
// state_and_packet.pkt_3 = pkt.length

// stateful variable rename list: 

// state_and_packet.state_0 = last_finish[pkt.id]

|StateAndPacket| program (|StateAndPacket| state_and_packet) {state_and_packet.pkt_0=state_and_packet.pkt_0;if ((state_and_packet.state_0>1)&&(state_and_packet.pkt_1<state_and_packet.state_0)) {state_and_packet.pkt_2=state_and_packet.state_0;state_and_packet.state_0+=state_and_packet.pkt_3;; }else {state_and_packet.pkt_2=state_and_packet.pkt_1;state_and_packet.state_0=state_and_packet.pkt_1+state_and_packet.pkt_3;; }; return state_and_packet;
}