/* 
// Original program: 
int count = 0;
struct Packet {
  int new;
};

// Detect first packet of a new flow
// Trigger: whatever is the definition of a flow
void func(struct Packet p) {
  if (count == 0) {
    count = 1;
    p.new = 1;
  }
}
 */

// Output the rename map:
// stateless variable rename list: 

// state_and_packet.pkt_0 = p.new

// stateful variable rename list: 

// state_and_packet.state_0 = count

|StateAndPacket| program (|StateAndPacket| state_and_packet) {if (state_and_packet.state_0==0) {state_and_packet.state_0=1;state_and_packet.pkt_0=1;; }; return state_and_packet;
}
 
/* 
// Original program: 
struct Packet {
  int tcpseq;
};

int count = 0;
int maxseq = 0;

void func(struct Packet p) {
  if (p.tcpseq < maxseq) {
    count = count + 1;
  } else {
    maxseq = p.tcpseq;
  }
}
 */

// Output the rename map:
// stateless variable rename list: 

// state_and_packet.pkt_0 = p.tcpseq

// stateful variable rename list: 

// state_and_packet.state_0 = maxseq
// state_and_packet.state_1 = count

|StateAndPacket| program (|StateAndPacket| state_and_packet) {if (state_and_packet.pkt_0<state_and_packet.state_0) {state_and_packet.state_1=state_and_packet.state_1+1;; }else {state_and_packet.state_0=state_and_packet.pkt_0;; }; return state_and_packet;
}
